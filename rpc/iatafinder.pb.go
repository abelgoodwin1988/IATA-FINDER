// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/iatafinder.proto

package iatafinder

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f856184b62ad7e4, []int{0}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

type Airport struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Country              string   `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Iata                 string   `protobuf:"bytes,5,opt,name=iata,proto3" json:"iata,omitempty"`
	Icao                 string   `protobuf:"bytes,6,opt,name=icao,proto3" json:"icao,omitempty"`
	Latitude             float64  `protobuf:"fixed64,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,8,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude             float64  `protobuf:"fixed64,9,opt,name=altitude,proto3" json:"altitude,omitempty"`
	Timezone             string   `protobuf:"bytes,10,opt,name=timezone,proto3" json:"timezone,omitempty"`
	DaylightSavingsTime  string   `protobuf:"bytes,11,opt,name=daylight_savings_time,json=daylightSavingsTime,proto3" json:"daylight_savings_time,omitempty"`
	Tz                   string   `protobuf:"bytes,12,opt,name=tz,proto3" json:"tz,omitempty"`
	Type                 string   `protobuf:"bytes,13,opt,name=type,proto3" json:"type,omitempty"`
	Source               string   `protobuf:"bytes,14,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Airport) Reset()         { *m = Airport{} }
func (m *Airport) String() string { return proto.CompactTextString(m) }
func (*Airport) ProtoMessage()    {}
func (*Airport) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f856184b62ad7e4, []int{1}
}

func (m *Airport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Airport.Unmarshal(m, b)
}
func (m *Airport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Airport.Marshal(b, m, deterministic)
}
func (m *Airport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Airport.Merge(m, src)
}
func (m *Airport) XXX_Size() int {
	return xxx_messageInfo_Airport.Size(m)
}
func (m *Airport) XXX_DiscardUnknown() {
	xxx_messageInfo_Airport.DiscardUnknown(m)
}

var xxx_messageInfo_Airport proto.InternalMessageInfo

func (m *Airport) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Airport) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Airport) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Airport) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Airport) GetIata() string {
	if m != nil {
		return m.Iata
	}
	return ""
}

func (m *Airport) GetIcao() string {
	if m != nil {
		return m.Icao
	}
	return ""
}

func (m *Airport) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Airport) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Airport) GetAltitude() float64 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *Airport) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *Airport) GetDaylightSavingsTime() string {
	if m != nil {
		return m.DaylightSavingsTime
	}
	return ""
}

func (m *Airport) GetTz() string {
	if m != nil {
		return m.Tz
	}
	return ""
}

func (m *Airport) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Airport) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type Airports struct {
	Airports             []*Airport `protobuf:"bytes,1,rep,name=airports,proto3" json:"airports,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Airports) Reset()         { *m = Airports{} }
func (m *Airports) String() string { return proto.CompactTextString(m) }
func (*Airports) ProtoMessage()    {}
func (*Airports) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f856184b62ad7e4, []int{2}
}

func (m *Airports) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Airports.Unmarshal(m, b)
}
func (m *Airports) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Airports.Marshal(b, m, deterministic)
}
func (m *Airports) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Airports.Merge(m, src)
}
func (m *Airports) XXX_Size() int {
	return xxx_messageInfo_Airports.Size(m)
}
func (m *Airports) XXX_DiscardUnknown() {
	xxx_messageInfo_Airports.DiscardUnknown(m)
}

var xxx_messageInfo_Airports proto.InternalMessageInfo

func (m *Airports) GetAirports() []*Airport {
	if m != nil {
		return m.Airports
	}
	return nil
}

type Airline struct {
	ID                   int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Alias                string   `protobuf:"bytes,3,opt,name=Alias,proto3" json:"Alias,omitempty"`
	Iata                 string   `protobuf:"bytes,4,opt,name=Iata,proto3" json:"Iata,omitempty"`
	Icao                 string   `protobuf:"bytes,5,opt,name=Icao,proto3" json:"Icao,omitempty"`
	Callsign             string   `protobuf:"bytes,6,opt,name=Callsign,proto3" json:"Callsign,omitempty"`
	Country              string   `protobuf:"bytes,7,opt,name=Country,proto3" json:"Country,omitempty"`
	Active               string   `protobuf:"bytes,8,opt,name=Active,proto3" json:"Active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Airline) Reset()         { *m = Airline{} }
func (m *Airline) String() string { return proto.CompactTextString(m) }
func (*Airline) ProtoMessage()    {}
func (*Airline) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f856184b62ad7e4, []int{3}
}

func (m *Airline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Airline.Unmarshal(m, b)
}
func (m *Airline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Airline.Marshal(b, m, deterministic)
}
func (m *Airline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Airline.Merge(m, src)
}
func (m *Airline) XXX_Size() int {
	return xxx_messageInfo_Airline.Size(m)
}
func (m *Airline) XXX_DiscardUnknown() {
	xxx_messageInfo_Airline.DiscardUnknown(m)
}

var xxx_messageInfo_Airline proto.InternalMessageInfo

func (m *Airline) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Airline) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Airline) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *Airline) GetIata() string {
	if m != nil {
		return m.Iata
	}
	return ""
}

func (m *Airline) GetIcao() string {
	if m != nil {
		return m.Icao
	}
	return ""
}

func (m *Airline) GetCallsign() string {
	if m != nil {
		return m.Callsign
	}
	return ""
}

func (m *Airline) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Airline) GetActive() string {
	if m != nil {
		return m.Active
	}
	return ""
}

type Airlines struct {
	Airlines             []*Airline `protobuf:"bytes,1,rep,name=airlines,proto3" json:"airlines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Airlines) Reset()         { *m = Airlines{} }
func (m *Airlines) String() string { return proto.CompactTextString(m) }
func (*Airlines) ProtoMessage()    {}
func (*Airlines) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f856184b62ad7e4, []int{4}
}

func (m *Airlines) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Airlines.Unmarshal(m, b)
}
func (m *Airlines) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Airlines.Marshal(b, m, deterministic)
}
func (m *Airlines) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Airlines.Merge(m, src)
}
func (m *Airlines) XXX_Size() int {
	return xxx_messageInfo_Airlines.Size(m)
}
func (m *Airlines) XXX_DiscardUnknown() {
	xxx_messageInfo_Airlines.DiscardUnknown(m)
}

var xxx_messageInfo_Airlines proto.InternalMessageInfo

func (m *Airlines) GetAirlines() []*Airline {
	if m != nil {
		return m.Airlines
	}
	return nil
}

type IATA struct {
	Iata                 string   `protobuf:"bytes,1,opt,name=iata,proto3" json:"iata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IATA) Reset()         { *m = IATA{} }
func (m *IATA) String() string { return proto.CompactTextString(m) }
func (*IATA) ProtoMessage()    {}
func (*IATA) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f856184b62ad7e4, []int{5}
}

func (m *IATA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IATA.Unmarshal(m, b)
}
func (m *IATA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IATA.Marshal(b, m, deterministic)
}
func (m *IATA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IATA.Merge(m, src)
}
func (m *IATA) XXX_Size() int {
	return xxx_messageInfo_IATA.Size(m)
}
func (m *IATA) XXX_DiscardUnknown() {
	xxx_messageInfo_IATA.DiscardUnknown(m)
}

var xxx_messageInfo_IATA proto.InternalMessageInfo

func (m *IATA) GetIata() string {
	if m != nil {
		return m.Iata
	}
	return ""
}

type ICAO struct {
	Icao                 string   `protobuf:"bytes,1,opt,name=icao,proto3" json:"icao,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ICAO) Reset()         { *m = ICAO{} }
func (m *ICAO) String() string { return proto.CompactTextString(m) }
func (*ICAO) ProtoMessage()    {}
func (*ICAO) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f856184b62ad7e4, []int{6}
}

func (m *ICAO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ICAO.Unmarshal(m, b)
}
func (m *ICAO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ICAO.Marshal(b, m, deterministic)
}
func (m *ICAO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ICAO.Merge(m, src)
}
func (m *ICAO) XXX_Size() int {
	return xxx_messageInfo_ICAO.Size(m)
}
func (m *ICAO) XXX_DiscardUnknown() {
	xxx_messageInfo_ICAO.DiscardUnknown(m)
}

var xxx_messageInfo_ICAO proto.InternalMessageInfo

func (m *ICAO) GetIcao() string {
	if m != nil {
		return m.Icao
	}
	return ""
}

type AirportDescriptor struct {
	Descriptor_          string   `protobuf:"bytes,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AirportDescriptor) Reset()         { *m = AirportDescriptor{} }
func (m *AirportDescriptor) String() string { return proto.CompactTextString(m) }
func (*AirportDescriptor) ProtoMessage()    {}
func (*AirportDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f856184b62ad7e4, []int{7}
}

func (m *AirportDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AirportDescriptor.Unmarshal(m, b)
}
func (m *AirportDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AirportDescriptor.Marshal(b, m, deterministic)
}
func (m *AirportDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AirportDescriptor.Merge(m, src)
}
func (m *AirportDescriptor) XXX_Size() int {
	return xxx_messageInfo_AirportDescriptor.Size(m)
}
func (m *AirportDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_AirportDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_AirportDescriptor proto.InternalMessageInfo

func (m *AirportDescriptor) GetDescriptor_() string {
	if m != nil {
		return m.Descriptor_
	}
	return ""
}

type AirlineDescriptor struct {
	Descriptor_          string   `protobuf:"bytes,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AirlineDescriptor) Reset()         { *m = AirlineDescriptor{} }
func (m *AirlineDescriptor) String() string { return proto.CompactTextString(m) }
func (*AirlineDescriptor) ProtoMessage()    {}
func (*AirlineDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_9f856184b62ad7e4, []int{8}
}

func (m *AirlineDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AirlineDescriptor.Unmarshal(m, b)
}
func (m *AirlineDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AirlineDescriptor.Marshal(b, m, deterministic)
}
func (m *AirlineDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AirlineDescriptor.Merge(m, src)
}
func (m *AirlineDescriptor) XXX_Size() int {
	return xxx_messageInfo_AirlineDescriptor.Size(m)
}
func (m *AirlineDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_AirlineDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_AirlineDescriptor proto.InternalMessageInfo

func (m *AirlineDescriptor) GetDescriptor_() string {
	if m != nil {
		return m.Descriptor_
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "iatafinder.EmptyRequest")
	proto.RegisterType((*Airport)(nil), "iatafinder.Airport")
	proto.RegisterType((*Airports)(nil), "iatafinder.Airports")
	proto.RegisterType((*Airline)(nil), "iatafinder.Airline")
	proto.RegisterType((*Airlines)(nil), "iatafinder.Airlines")
	proto.RegisterType((*IATA)(nil), "iatafinder.IATA")
	proto.RegisterType((*ICAO)(nil), "iatafinder.ICAO")
	proto.RegisterType((*AirportDescriptor)(nil), "iatafinder.AirportDescriptor")
	proto.RegisterType((*AirlineDescriptor)(nil), "iatafinder.AirlineDescriptor")
}

func init() { proto.RegisterFile("rpc/iatafinder.proto", fileDescriptor_9f856184b62ad7e4) }

var fileDescriptor_9f856184b62ad7e4 = []byte{
	// 559 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x8e, 0xd3, 0x3c,
	0x14, 0xfd, 0xd2, 0xe9, 0xef, 0xed, 0x7c, 0x15, 0x78, 0x0a, 0xb2, 0x2a, 0x06, 0x55, 0x59, 0x75,
	0x35, 0x23, 0x75, 0x56, 0x88, 0x55, 0x68, 0x11, 0xea, 0x86, 0x91, 0xc2, 0xec, 0x47, 0x26, 0x31,
	0xc5, 0x92, 0x1b, 0x87, 0xc4, 0x1d, 0x29, 0x7d, 0x06, 0x5e, 0x88, 0x07, 0xe2, 0x3d, 0xd0, 0xb5,
	0x1d, 0x27, 0x68, 0x5a, 0xd4, 0xdd, 0xbd, 0xe7, 0x9e, 0x63, 0xfb, 0xf8, 0x38, 0x81, 0x69, 0x91,
	0x27, 0xb7, 0x82, 0x69, 0xf6, 0x4d, 0x64, 0x29, 0x2f, 0x6e, 0xf2, 0x42, 0x69, 0x45, 0xa0, 0x41,
	0xc2, 0x09, 0x5c, 0x7e, 0xdc, 0xe5, 0xba, 0x8a, 0xf9, 0x8f, 0x3d, 0x2f, 0x75, 0xf8, 0xbb, 0x03,
	0x83, 0x48, 0x14, 0xb9, 0x2a, 0x34, 0x99, 0x40, 0x47, 0xa4, 0x34, 0x98, 0x07, 0x8b, 0x5e, 0xdc,
	0x11, 0x29, 0x21, 0xd0, 0xcd, 0xd8, 0x8e, 0xd3, 0xce, 0x3c, 0x58, 0x8c, 0x62, 0x53, 0x23, 0x96,
	0x08, 0x5d, 0xd1, 0x0b, 0x8b, 0x61, 0x4d, 0x28, 0x0c, 0x12, 0xb5, 0xcf, 0x74, 0x51, 0xd1, 0xae,
	0x81, 0xeb, 0x16, 0xd9, 0xb8, 0x37, 0xed, 0x59, 0x36, 0xd6, 0x06, 0x4b, 0x98, 0xa2, 0x7d, 0x87,
	0x25, 0x4c, 0x91, 0x19, 0x0c, 0x25, 0xd3, 0x42, 0xef, 0x53, 0x4e, 0x07, 0xf3, 0x60, 0x11, 0xc4,
	0xbe, 0x27, 0x6f, 0x60, 0x24, 0x55, 0xb6, 0xb5, 0xc3, 0xa1, 0x19, 0x36, 0x00, 0x2a, 0x99, 0x74,
	0xca, 0x91, 0x55, 0xd6, 0x3d, 0xce, 0xb4, 0xd8, 0xf1, 0x83, 0xca, 0x38, 0x05, 0xb3, 0x9b, 0xef,
	0xc9, 0x12, 0x5e, 0xa5, 0xac, 0x92, 0x62, 0xfb, 0x5d, 0x3f, 0x96, 0xec, 0x49, 0x64, 0xdb, 0xf2,
	0x11, 0x87, 0x74, 0x6c, 0x88, 0x57, 0xf5, 0xf0, 0x8b, 0x9d, 0x3d, 0x88, 0x1d, 0xc7, 0xfb, 0xd1,
	0x07, 0x7a, 0x69, 0x08, 0x1d, 0x7d, 0x40, 0x27, 0xba, 0xca, 0x39, 0xfd, 0xdf, 0x3a, 0xc1, 0x9a,
	0xbc, 0x86, 0x7e, 0xa9, 0xf6, 0x45, 0xc2, 0xe9, 0xc4, 0xa0, 0xae, 0x0b, 0xdf, 0xc3, 0xd0, 0x5d,
	0x73, 0x49, 0x6e, 0x61, 0xc8, 0x5c, 0x4d, 0x83, 0xf9, 0xc5, 0x62, 0xbc, 0xbc, 0xba, 0x69, 0x85,
	0xe6, 0x78, 0xb1, 0x27, 0x85, 0xbf, 0x02, 0x13, 0x92, 0x14, 0x99, 0x39, 0xc4, 0x66, 0x5d, 0x87,
	0xb4, 0x59, 0xe3, 0x21, 0x3e, 0xb7, 0x42, 0xc2, 0x9a, 0x4c, 0xa1, 0x17, 0x49, 0xc1, 0x4a, 0x97,
	0x92, 0x6d, 0x90, 0xb9, 0xc1, 0x30, 0x6c, 0x46, 0xa6, 0x36, 0x18, 0x86, 0xe1, 0x02, 0xda, 0xb8,
	0x30, 0x56, 0x4c, 0xca, 0x52, 0x6c, 0x33, 0x17, 0x92, 0xef, 0x31, 0xea, 0x95, 0x8b, 0x7a, 0x60,
	0xa3, 0x76, 0x2d, 0x1a, 0x8f, 0x12, 0x2d, 0x9e, 0x6c, 0x46, 0xa3, 0xd8, 0x75, 0xce, 0x38, 0x1e,
	0xbd, 0x36, 0x6e, 0xea, 0x13, 0xc6, 0x71, 0x16, 0x7b, 0x52, 0x38, 0x83, 0xee, 0x26, 0x7a, 0x88,
	0xfc, 0x3b, 0x0a, 0x9a, 0x77, 0x64, 0x66, 0xab, 0xe8, 0xde, 0xbf, 0xa7, 0xa0, 0x79, 0x4f, 0xe1,
	0x1d, 0xbc, 0x74, 0xb7, 0xb8, 0xe6, 0x65, 0x52, 0x88, 0x5c, 0xab, 0x82, 0xbc, 0x05, 0x48, 0x7d,
	0xe7, 0xe8, 0x2d, 0xc4, 0x89, 0x70, 0xe3, 0xf3, 0x45, 0xcb, 0x9f, 0x5d, 0x68, 0x7d, 0x5e, 0xe4,
	0x03, 0x4c, 0x3e, 0x71, 0x1d, 0x49, 0xe9, 0xc3, 0xa6, 0x6d, 0x87, 0xed, 0x4f, 0x6f, 0x36, 0x3d,
	0x12, 0x7a, 0x19, 0xfe, 0x47, 0xd6, 0x30, 0xc6, 0x35, 0xea, 0x05, 0xae, 0x8f, 0xd0, 0x9a, 0x03,
	0x9e, 0x5c, 0xe5, 0x9d, 0x3d, 0x89, 0x05, 0xcc, 0x25, 0xbe, 0x68, 0x33, 0x11, 0x99, 0x1d, 0x7b,
	0x76, 0xcf, 0xa4, 0x78, 0xc7, 0x7f, 0x4b, 0x57, 0xd1, 0xfd, 0x29, 0x69, 0xdb, 0xbf, 0xcd, 0xfc,
	0x7c, 0xff, 0x36, 0xf2, 0x96, 0x7f, 0xbb, 0xc0, 0xf5, 0x11, 0xda, 0x3f, 0xfc, 0xd7, 0xab, 0x78,
	0x13, 0x08, 0x9c, 0xe9, 0x1f, 0xa9, 0xcf, 0xa4, 0xe7, 0xf9, 0xb7, 0xd2, 0xaf, 0x7d, 0xf3, 0xc7,
	0xbd, 0xfb, 0x13, 0x00, 0x00, 0xff, 0xff, 0xa3, 0xdc, 0x62, 0x76, 0x89, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IatafinderClient is the client API for Iatafinder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IatafinderClient interface {
	GetAllAirports(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Airports, error)
	GetAirports(ctx context.Context, in *AirportDescriptor, opts ...grpc.CallOption) (*Airports, error)
	GetAirportIATA(ctx context.Context, in *IATA, opts ...grpc.CallOption) (*Airport, error)
	GetAirportICAO(ctx context.Context, in *ICAO, opts ...grpc.CallOption) (*Airport, error)
	GetAllAirlines(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Airlines, error)
	GetAirlines(ctx context.Context, in *AirlineDescriptor, opts ...grpc.CallOption) (*Airlines, error)
	GetAirlineIATA(ctx context.Context, in *IATA, opts ...grpc.CallOption) (*Airline, error)
	GetAirlineICAO(ctx context.Context, in *ICAO, opts ...grpc.CallOption) (*Airline, error)
}

type iatafinderClient struct {
	cc *grpc.ClientConn
}

func NewIatafinderClient(cc *grpc.ClientConn) IatafinderClient {
	return &iatafinderClient{cc}
}

func (c *iatafinderClient) GetAllAirports(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Airports, error) {
	out := new(Airports)
	err := c.cc.Invoke(ctx, "/iatafinder.iatafinder/GetAllAirports", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iatafinderClient) GetAirports(ctx context.Context, in *AirportDescriptor, opts ...grpc.CallOption) (*Airports, error) {
	out := new(Airports)
	err := c.cc.Invoke(ctx, "/iatafinder.iatafinder/GetAirports", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iatafinderClient) GetAirportIATA(ctx context.Context, in *IATA, opts ...grpc.CallOption) (*Airport, error) {
	out := new(Airport)
	err := c.cc.Invoke(ctx, "/iatafinder.iatafinder/GetAirportIATA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iatafinderClient) GetAirportICAO(ctx context.Context, in *ICAO, opts ...grpc.CallOption) (*Airport, error) {
	out := new(Airport)
	err := c.cc.Invoke(ctx, "/iatafinder.iatafinder/GetAirportICAO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iatafinderClient) GetAllAirlines(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*Airlines, error) {
	out := new(Airlines)
	err := c.cc.Invoke(ctx, "/iatafinder.iatafinder/GetAllAirlines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iatafinderClient) GetAirlines(ctx context.Context, in *AirlineDescriptor, opts ...grpc.CallOption) (*Airlines, error) {
	out := new(Airlines)
	err := c.cc.Invoke(ctx, "/iatafinder.iatafinder/GetAirlines", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iatafinderClient) GetAirlineIATA(ctx context.Context, in *IATA, opts ...grpc.CallOption) (*Airline, error) {
	out := new(Airline)
	err := c.cc.Invoke(ctx, "/iatafinder.iatafinder/GetAirlineIATA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iatafinderClient) GetAirlineICAO(ctx context.Context, in *ICAO, opts ...grpc.CallOption) (*Airline, error) {
	out := new(Airline)
	err := c.cc.Invoke(ctx, "/iatafinder.iatafinder/GetAirlineICAO", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IatafinderServer is the server API for Iatafinder service.
type IatafinderServer interface {
	GetAllAirports(context.Context, *EmptyRequest) (*Airports, error)
	GetAirports(context.Context, *AirportDescriptor) (*Airports, error)
	GetAirportIATA(context.Context, *IATA) (*Airport, error)
	GetAirportICAO(context.Context, *ICAO) (*Airport, error)
	GetAllAirlines(context.Context, *EmptyRequest) (*Airlines, error)
	GetAirlines(context.Context, *AirlineDescriptor) (*Airlines, error)
	GetAirlineIATA(context.Context, *IATA) (*Airline, error)
	GetAirlineICAO(context.Context, *ICAO) (*Airline, error)
}

// UnimplementedIatafinderServer can be embedded to have forward compatible implementations.
type UnimplementedIatafinderServer struct {
}

func (*UnimplementedIatafinderServer) GetAllAirports(ctx context.Context, req *EmptyRequest) (*Airports, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllAirports not implemented")
}
func (*UnimplementedIatafinderServer) GetAirports(ctx context.Context, req *AirportDescriptor) (*Airports, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAirports not implemented")
}
func (*UnimplementedIatafinderServer) GetAirportIATA(ctx context.Context, req *IATA) (*Airport, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAirportIATA not implemented")
}
func (*UnimplementedIatafinderServer) GetAirportICAO(ctx context.Context, req *ICAO) (*Airport, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAirportICAO not implemented")
}
func (*UnimplementedIatafinderServer) GetAllAirlines(ctx context.Context, req *EmptyRequest) (*Airlines, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllAirlines not implemented")
}
func (*UnimplementedIatafinderServer) GetAirlines(ctx context.Context, req *AirlineDescriptor) (*Airlines, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAirlines not implemented")
}
func (*UnimplementedIatafinderServer) GetAirlineIATA(ctx context.Context, req *IATA) (*Airline, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAirlineIATA not implemented")
}
func (*UnimplementedIatafinderServer) GetAirlineICAO(ctx context.Context, req *ICAO) (*Airline, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAirlineICAO not implemented")
}

func RegisterIatafinderServer(s *grpc.Server, srv IatafinderServer) {
	s.RegisterService(&_Iatafinder_serviceDesc, srv)
}

func _Iatafinder_GetAllAirports_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IatafinderServer).GetAllAirports(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iatafinder.iatafinder/GetAllAirports",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IatafinderServer).GetAllAirports(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Iatafinder_GetAirports_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AirportDescriptor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IatafinderServer).GetAirports(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iatafinder.iatafinder/GetAirports",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IatafinderServer).GetAirports(ctx, req.(*AirportDescriptor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Iatafinder_GetAirportIATA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IATA)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IatafinderServer).GetAirportIATA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iatafinder.iatafinder/GetAirportIATA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IatafinderServer).GetAirportIATA(ctx, req.(*IATA))
	}
	return interceptor(ctx, in, info, handler)
}

func _Iatafinder_GetAirportICAO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ICAO)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IatafinderServer).GetAirportICAO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iatafinder.iatafinder/GetAirportICAO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IatafinderServer).GetAirportICAO(ctx, req.(*ICAO))
	}
	return interceptor(ctx, in, info, handler)
}

func _Iatafinder_GetAllAirlines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IatafinderServer).GetAllAirlines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iatafinder.iatafinder/GetAllAirlines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IatafinderServer).GetAllAirlines(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Iatafinder_GetAirlines_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AirlineDescriptor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IatafinderServer).GetAirlines(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iatafinder.iatafinder/GetAirlines",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IatafinderServer).GetAirlines(ctx, req.(*AirlineDescriptor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Iatafinder_GetAirlineIATA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IATA)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IatafinderServer).GetAirlineIATA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iatafinder.iatafinder/GetAirlineIATA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IatafinderServer).GetAirlineIATA(ctx, req.(*IATA))
	}
	return interceptor(ctx, in, info, handler)
}

func _Iatafinder_GetAirlineICAO_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ICAO)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IatafinderServer).GetAirlineICAO(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iatafinder.iatafinder/GetAirlineICAO",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IatafinderServer).GetAirlineICAO(ctx, req.(*ICAO))
	}
	return interceptor(ctx, in, info, handler)
}

var _Iatafinder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iatafinder.iatafinder",
	HandlerType: (*IatafinderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllAirports",
			Handler:    _Iatafinder_GetAllAirports_Handler,
		},
		{
			MethodName: "GetAirports",
			Handler:    _Iatafinder_GetAirports_Handler,
		},
		{
			MethodName: "GetAirportIATA",
			Handler:    _Iatafinder_GetAirportIATA_Handler,
		},
		{
			MethodName: "GetAirportICAO",
			Handler:    _Iatafinder_GetAirportICAO_Handler,
		},
		{
			MethodName: "GetAllAirlines",
			Handler:    _Iatafinder_GetAllAirlines_Handler,
		},
		{
			MethodName: "GetAirlines",
			Handler:    _Iatafinder_GetAirlines_Handler,
		},
		{
			MethodName: "GetAirlineIATA",
			Handler:    _Iatafinder_GetAirlineIATA_Handler,
		},
		{
			MethodName: "GetAirlineICAO",
			Handler:    _Iatafinder_GetAirlineICAO_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/iatafinder.proto",
}
